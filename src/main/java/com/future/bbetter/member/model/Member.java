package com.future.bbetter.member.model;
// Generated 2017/9/24 下午 04:29:10 by Hibernate Tools 5.2.3.Final

import static javax.persistence.GenerationType.IDENTITY;

import java.util.Date;
import java.util.HashSet;
import java.util.Set;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import javax.persistence.UniqueConstraint;

import com.future.bbetter.achievement.model.AchievementHad;
import com.future.bbetter.pet.model.PetsHad;
import com.future.bbetter.schedule.model.ReportSchedule;
import com.future.bbetter.schedule.model.ScheduleHad;

/**
 * Member generated by hbm2java
 */
@Entity
@Table(name = "member", catalog = "bbetter", uniqueConstraints = @UniqueConstraint(columnNames = "email"))
public class Member implements java.io.Serializable {

	private Long memberId;
	private String email;
	private String password;
	private String salt;
	private String name;
	private int gender;
	private Double money;
	private Date birthday;
	private String address;
	private Date createdate;
	private Date updatedate;
	private Set<AchievementHad> achievementHads = new HashSet<AchievementHad>(0);
	private Set<Friend> friendsForFriendMemberId = new HashSet<Friend>(0);
	private Set<Friend> friendsForMemberId = new HashSet<Friend>(0);
	private Set<PetsHad> petsHads = new HashSet<PetsHad>(0);
	private Set<ScheduleHad> scheduleHads = new HashSet<ScheduleHad>(0);
	private Set<ReportSchedule> reportSchedules = new HashSet<ReportSchedule>(0);

	public Member() {
	}

	public Member(String email, String password, String name, int gender, Double money, String address) {
		this.email = email;
		this.password = password;
		this.name = name;
		this.gender = gender;
		this.money = money;
		this.address = address;
	}

	public Member(String email, String password, String salt, String name, int gender, Double money, Date birthday,
			String address, Date createdate, Date updatedate, Set<AchievementHad> achievementHads,
			Set<Friend> friendsForFriendMemberId, Set<Friend> friendsForMemberId, Set<PetsHad> petsHads,
			Set<ScheduleHad> scheduleHads, Set<ReportSchedule> reportSchedules) {
		this.email = email;
		this.password = password;
		this.salt = salt;
		this.name = name;
		this.gender = gender;
		this.money = money;
		this.birthday = birthday;
		this.address = address;
		this.createdate = createdate;
		this.updatedate = updatedate;
		this.achievementHads = achievementHads;
		this.friendsForFriendMemberId = friendsForFriendMemberId;
		this.friendsForMemberId = friendsForMemberId;
		this.petsHads = petsHads;
		this.scheduleHads = scheduleHads;
		this.reportSchedules = reportSchedules;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)

	@Column(name = "member_id", unique = true, nullable = false)
	public Long getMemberId() {
		return this.memberId;
	}

	public void setMemberId(Long memberId) {
		this.memberId = memberId;
	}

	@Column(name = "email", unique = true, nullable = false, length = 45)
	public String getEmail() {
		return this.email;
	}

	public void setEmail(String email) {
		this.email = email;
	}

	@Column(name = "password", nullable = false, length = 60)
	public String getPassword() {
		return this.password;
	}

	public void setPassword(String password) {
		this.password = password;
	}

	@Column(name = "salt", length = 45)
	public String getSalt() {
		return this.salt;
	}

	public void setSalt(String salt) {
		this.salt = salt;
	}

	@Column(name = "name", nullable = false, length = 45)
	public String getName() {
		return this.name;
	}

	public void setName(String name) {
		this.name = name;
	}

	@Column(name = "gender", nullable = false)
	public int getGender() {
		return this.gender;
	}

	public void setGender(int gender) {
		this.gender = gender;
	}

	@Column(name = "money", nullable = false, precision = 10)
	public Double getMoney() {
		return this.money;
	}

	public void setMoney(Double money) {
		this.money = money;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "birthday", length = 19)
	public Date getBirthday() {
		return this.birthday;
	}

	public void setBirthday(Date birthday) {
		this.birthday = birthday;
	}

	@Column(name = "address", nullable = false, length = 200)
	public String getAddress() {
		return this.address;
	}

	public void setAddress(String address) {
		this.address = address;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "createdate", length = 19)
	public Date getCreatedate() {
		return this.createdate;
	}

	public void setCreatedate(Date createdate) {
		this.createdate = createdate;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "updatedate", length = 19)
	public Date getUpdatedate() {
		return this.updatedate;
	}

	public void setUpdatedate(Date updatedate) {
		this.updatedate = updatedate;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "member")
	public Set<AchievementHad> getAchievementHads() {
		return this.achievementHads;
	}

	public void setAchievementHads(Set<AchievementHad> achievementHads) {
		this.achievementHads = achievementHads;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "memberByFriendMemberId")
	public Set<Friend> getFriendsForFriendMemberId() {
		return this.friendsForFriendMemberId;
	}

	public void setFriendsForFriendMemberId(Set<Friend> friendsForFriendMemberId) {
		this.friendsForFriendMemberId = friendsForFriendMemberId;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "memberByMemberId")
	public Set<Friend> getFriendsForMemberId() {
		return this.friendsForMemberId;
	}

	public void setFriendsForMemberId(Set<Friend> friendsForMemberId) {
		this.friendsForMemberId = friendsForMemberId;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "member")
	public Set<PetsHad> getPetsHads() {
		return this.petsHads;
	}

	public void setPetsHads(Set<PetsHad> petsHads) {
		this.petsHads = petsHads;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "member")
	public Set<ScheduleHad> getScheduleHads() {
		return this.scheduleHads;
	}

	public void setScheduleHads(Set<ScheduleHad> scheduleHads) {
		this.scheduleHads = scheduleHads;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "member")
	public Set<ReportSchedule> getReportSchedules() {
		return this.reportSchedules;
	}

	public void setReportSchedules(Set<ReportSchedule> reportSchedules) {
		this.reportSchedules = reportSchedules;
	}

}
